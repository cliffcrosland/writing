syntax = "proto3";

package writing;

message Page {
  string org_id = 1;
  string id = 2;
  string created_by_user_id = 3;
  string current_page_revision_id = 4;
  string content = 5;
}

// Models for real-time collaborative page editing

message PageRevision {
  string org_id = 1;
  string page_id = 2;
  string id = 3;
  PageEdit page_edit = 4;
}

message PageEdit {
  oneof page_edit {
    InsertPageContent insert_page_content = 1;
    DeletePageContent delete_page_content = 2;
    UpdatePageTitle update_page_title = 3;
  }
}

message InsertPageContent {
  int32 pos = 1;
  string text = 2;
}

message DeletePageContent {
  int32 start_pos = 1;
  int32 end_pos = 2;
}

message UpdatePageTitle {
  string title = 1;
  int64 client_timestamp_ms = 2;
}

message PageUpdate {
  string new_page_revision_id = 1;
  repeated PageEdit new_page_edits = 2;
  repeated PageClientCursor new_page_client_cursors = 3;
}

message PageClientCursor {
  string org_id = 1;
  string user_id = 2;
  int32 pos = 3;
}

message PageUser {
  string org_id = 1;
  string user_id = 2;
  string name = 3;
  string email = 4;
  string photo_url = 5;
}

// RPCs for real-time collaborative page editing

message LoadPageRequest {
  string org_id = 1;
  string page_id = 2;
}

message LoadPageResponse {
  Page page =  1;
}

message SubmitPageEditRequest {
  string org_id = 1;
  string page_id = 2;
  string client_page_revision_id = 3;
  PageEdit page_edit = 4;
}

message SubmitPageEditResponse {
  PageUpdate page_update = 1;
}

message GetLatestPageUpdateRequest {
  string client_page_revision_id = 1;
}

message GetLatestPageUpdateResponse {
  PageUpdate page_update = 1;
}

// RPCs for creating and deleting pages

message CreatePageRequest {
  string org_id = 1;
  string name = 2;
}

message CreatePageResponse {
  Page page = 1;
}

message DeletePageRequest {
  string org_id = 1;
  string page_id = 2;
}

message DeletePageResponse {
}
